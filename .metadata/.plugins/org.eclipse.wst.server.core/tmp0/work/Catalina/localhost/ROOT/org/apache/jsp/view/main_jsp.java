/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.42
 * Generated at: 2017-04-10 07:18:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import hsw.comm.Url;
import hsw.board.vo.BoardListVO;
import java.util.List;
import hsw.user.vo.LoginVO;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("hsw.user.vo.LoginVO");
    _jspx_imports_classes.add("hsw.comm.Url");
    _jspx_imports_classes.add("hsw.board.vo.BoardListVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
 LoginVO loginVo = (LoginVO)session.getAttribute("LOGIN"); 
      out.write('\r');
      out.write('\n');
      out.write('	');
 if(loginVo == null){ 
      out.write("\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"page-header\">\r\n");
      out.write("\t\t\t\t<h2>로그인 하세요</h2>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-md-3\">\r\n");
      out.write("\t\t\t\t<div class=\"login-box well\">\r\n");
      out.write("\t\t\t\t\t<form role=\"form\" method=\"post\" action=\"");
      out.print( Url.URI_LOGINCHECK);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t<legend>로그인</legend>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"userid\">이메일 or 아이디</label> <input name=\"userid\"\r\n");
      out.write("\t\t\t\t\t\t\t\tvalue='' id=\"userid\" placeholder=\"E-mail or Username\"\r\n");
      out.write("\t\t\t\t\t\t\t\ttype=\"text\" class=\"form-control\" />\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<label for=\"password\">비밀번호</label> <input name=\"userpw\"\r\n");
      out.write("\t\t\t\t\t\t\t\tid=\"password\" value='' placeholder=\"Password\" type=\"password\"\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"form-control\" />\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"submit\"\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"btn btn-default btn-login-submit btn-block m-t-md\"\r\n");
      out.write("\t\t\t\t\t\t\t\tvalue=\"Login\" />\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
}else{ 
      out.write("\r\n");
      out.write("\t<h1>게시물목록!</h1>\r\n");
      out.write("\th2><a href=\"../User/logout\">로그아웃</a></h2>\r\n");
      out.write("\t");

		List<BoardListVO> bl = (List)request.getAttribute("boardList");
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<table border=\"1\" class=\"table\">\r\n");
      out.write("\t\t<!-- 컬럼의 이름 (데이터베이스의 컬럼명이 아닌 제목)-->\r\n");
      out.write("\t\t<thead>\r\n");
      out.write("\t\t\t<th>글번호</th>\r\n");
      out.write("\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t<th>아이디</th>\r\n");
      out.write("\t\t\t<th>작성일</th>\r\n");
      out.write("\t\t\t<th>수정일</th>\r\n");
      out.write("\t\t\t<th>조회수</th>\t\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t");
for(int i=0; i<bl.size(); i++){ 
      out.write("\r\n");
      out.write("\t\t<!-- <tr></tr> => row1  Table Row -->\r\n");
      out.write("\t\t\t<tr align=\"center\">\r\n");
      out.write("\t\t\t<!-- <td></td> => DATA Table DATA -->\r\n");
      out.write("\t\t\t\t<td>");
      out.print(bl.get(i).getBidx() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t\t<td><a href=\"../Board/BoardContents?bidx=");
      out.print(bl.get(i).getBidx());
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print(bl.get(i).getTitle() );
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(bl.get(i).getUserid() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(bl.get(i).getWritedate() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(bl.get(i).getModdate() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(bl.get(i).getHitcnt() );
      out.write("\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t</table>\r\n");
      out.write("\t");
} 
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
